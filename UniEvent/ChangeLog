2002-03-14  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/Timer.h, UniEvent/UNIXTimer.h: I forgot the maxim: Push
	data down the hierarchy as far as it'll go.  Fixed by putting
	dispatcher_ in UNIXTimer instead of the Timer interface where it
	didn't belong.

2002-03-14  Eric M. Hopper  <hopper@omnifarious.org>

	* UnixEventPoll.cxx: Fixed a big bug which would cause doPoll to
	fail if ever more than one file descriptor was registered.
	(Forgot to increment i at the end of a while loop.)

	Changed to automatically kick out file descriptors that have been
	closed or are invalid to kill off infinite loops.

2002-03-13  Eric M. Hopper  <hopper@omnifarious.org>

	* tests/testupoll.cxx: The test works now.  Removed code to chop
	newline from the end if the string read by getline because getline
	already does it.

	* UnixEventPoll.cxx: Removed lots of debugging prints.

	* SimpleDispatcherImp.cxx: Put an anonymous namespace wrapper
	around a couple of functions that needed it.

	* UniEvent/UNIXpollManagerImp.h, SimpleDispatcherImp.cxx,
	UNIXError.cxx, UnixEventPoll.cxx, UNIXSignalHandler.cxx,
	UNIXTimer.cxx: Numerous good changes to appease AIX's much
	stricter compiler.  Now much more tight about exactly where names
	are accessible.

2002-03-12  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/Dispatcher.h, UniEvent/Event.h, UniEvent/EventPtr.h,
	UniEvent/EventPtrT.h, UniEvent/UNEVT_ClassIdent.h,
	UniEvent/UNIXError.h, UniEvent/UNIXpollManager.h: Fixed many small
	things the Solaris compiler doesn't like.  Removed ;'s after the
	closing } of namespaces.  Removed redeclaration of default
	argument values in a few places.

	* tests/testupoll.cxx: More attempts to ferret out the problem.
	GCC bug?

	* UnixEventPoll.cxx: Added in new simple_bitset class so I have
	cleaner bitset code in order to debug things.

2002-03-08  Eric M. Hopper  <hopper@omnifarious.org>

	* InterruptibleDispatcher.cxx, UniEvent/InterruptibleDispatcher.h,
	UnixEventPoll.cxx: More testing, seems something's wrong with STLs
	bitset.

	* Makefile.in, tests/testupoll.cxx, UniEvent/UnixEventPoll.h,
	UnixEventPoll.cxx: In the middle of testing and debugging.  Added
	to library makefile.

2002-03-07  Eric M. Hopper  <hopper@omnifarious.org>

	* UnixEventPoll.cxx: Fleshed out doPoll even more.

	* UnixEventPoll.cxx: Fleshed out doPoll some more.

	* UnixEventPoll.cxx: Fleshed out doPoll a bit.

	* UnixEventPoll.cxx: Partly done, needs more work.

	* UniEvent/UnixEventPoll.h, UniEvent/UnixEventRegistry.h: Minor
	cleanups.  Changed bool function to void.

2002-03-06  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/UnixEventPoll.h: Moved forward a bit.

	* UniEvent/UnixEventRegistry.h: Changed default sense of doPoll.

2002-03-01  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/UnixEventPoll.h, UniEvent/UnixEventRegistry.h: Half
	finished beginning of a new Unix event system.

2002-02-28  Eric M. Hopper  <hopper@omnifarious.org>

	* UnixEventRegistry.cxx: Initial version.  Just the .cxx
	stub for an interface.

	* UniEvent/UnixEventRegistry.h: Changed name to UnixEventRegistry
	and added interface for signals.

2002-02-27  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/UnixEventRegistry.h: More tiny changes.

2002-02-26  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/UnixEventRegistry.h: More editing.  :-)

	* UniEvent/UnixEventRegistry.h: Building a replacement for
	UNIXpollManager and the signal handling stuff.

2002-02-10  Eric M. Hopper  <hopper@omnifarious.org>

	* UniEvent/UNIXpollManagerImp.h: More small changes to make work
	better with standard C++.

	* tests/testdisp.cxx, tests/testsimple.cxx, tests/testUPoll.cxx,
	UNEVT_ClassIdent.cxx, UniEvent/UNEVT_ClassIdent.h,
	UniEvent/UNIXpollManager.h: More changes to make work better with
	standard C++.  Also, added a bit of documentation to try to make
	doxygen happy.

2002-02-05  Eric M. Hopper  <hopper@omnifarious.org>

	* /home/hopper/src/cvs/C++/UniEvent/ChangeLog, /home/hopper/src/cvs/C++/UniEvent/UNIXSignalHandler.cxx:
	Fixed up things to work with new C++ standard library that insists on
	the std:: namespace.  Removed RCS id string because it isn't
	consistently included and of dubious value.

2002-02-05  Eric Hopper  <hopper@omnifarious.org>

	* Everything: Fixed up things to work with new C++ standard
	library that insists on the std:: namespace.  Removed RCS id
	string because it isn't consistently included and of dubious
	value.

2001-09-23  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Timer.h, Timer.cxx, UniEvent/UNIXTimer.h,
	UNIXTimer.cxx, tests/testtimer.cxx, UNEVT_ClassIdent.cxx,
	Makefile.in: Added a new interface, Timer, and an implementation
	of the Timer interface, UNIXTimer.  These classes are used to
	schedule events at particular times.  Currently, UNIXTimer relies
	on a UNIXSignalHandler and uses the SIGALRM signal.

2001-09-04  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNIXSignalHandler.h, UNIXSignalHandler.cxx: This class
	is now semi-finished.  In the spirit of extreme programming, it's
	only as complicated as it has to be to get just what I want out of
	signals right now.

	* SimpleDispatcherImp.cxx: Added a few commented out debugging
	messages to debug signal handling.  Making signals work has made
	me realize this code needs rewriting yet again.  :-(

2001-08-24  Eric Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNIXSignalHandler.h: Initial cut of interface for
	signal handling.

2001-08-23  Eric Hopper  <hopper@omnifarious.mn.org>

	* SimpleDispatcherImp.cxx: Added support for the interrupt method
	in Dispatcher.

2001-08-18  Eric M. Hopper  <hopper@omnifarious.org>

	* Lots of files: More changes to add namespace support to at least
	the UniEvent section.  Also, updated the doxygen documentation
	both for namespaces, and to make it more complete.

2001-08-10  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* Event.cxx, EventPtr.cxx, SimpleDispatcher.cxx,
	SimpleDispatcherImp.cxx, UniEvent/Dispatcher.h, UniEvent/Event.h,
	UniEvent/EventPtr.h, UniEvent/EventPtrT.h,
	UniEvent/UNEVT_ClassIdent.h: First pass at adding namespace
	support to libNet.  Also, spruced up the documentation a bit.

2001-07-16  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Event.h, UniEvent/Dispatcher.h: Added preliminary
	interface changes for interrupt method.  Spruced up documentation.

2001-07-03  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UNIXpollManagerImp.cxx (doPoll): Fixed likely error.

	* UniEvent/UNIXError.h: Removed bogus constructors that used the
	LCORE_GET_COMPILERINFO macro in the wrong way.  Added contructor
	argument to allow the creation of EOF errors.

	* UNIXpollManagerImp.cxx: Fixed some compiler warnings.

2001-07-02  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNIXError.h, UNIXError.cxx: Added new constant,
	UNIXError::S_noerror to represent no error.
	Removed constructors that used LCORE_GET_COMPILERINFO because I
	had stupidly forgotten why I had the macro in the first place.


2001-06-19  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNIXError.h, UNIXError.cxx: Changed to derive from the
	LCoreError class and be fully multithread safe.

2001-04-19  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNIXpollManagerImp.h, UNIXpollManagerImp.cxx: Changed
	interface to allow for an actual 'poll' instead of always waiting
	for an event to happen.  Changed to use the new Dispatcher ability
	to register 'busy' events to cause the poll manager to be called
	when the system would otherwise be too busy for the queue to get
	empty.

	* UniEvent/UNIXpollManager.h: Changed interface to allow for an
	actual 'poll' instead of always waiting for an event to happen.

	* UniEvent/Dispatcher.h: Changed from Perceps to doxygen comments.

	Changed interfaces to implement busy polling and only allow one
	'on queue empty' event.

	* UniEvent/SimpleDispatcher.h, SimpleDispatcherImp.cxx: Changed
	from Perceps to doxygen comments.

	Complete overhaul to implement busy polling and only allow one 'on
	queue empty' event.

2001-03-06  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* libNet-0.2.2 is released.

2000-12-01  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/EventPtrT.h: Made some changes because Doxygen has
	difficulties with typedefs.

2000-01-27  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Dispatcher.h:
	* UniEvent/Event.h:
	* UniEvent/SimpleDispatcher.h:
	* UniEvent/UNIXpollManager.h:
	* UNIXpollManagerImp.cxx:
	* SimpleDispatcherImp.cxx: Added some member function
	documentation.
	Fixed various member functions to conform to the 'first letter is
	lowercase' naming conventions.

1999-11-18  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* Everything: Added copyright notices everywhere!

1999-10-20  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Dispatcher.h:
	* UniEvent/SimpleDispatcher.h:
	* UniEvent/UNEVT_ClassIdent.h:
	* UniEvent/UNIXpollManager.h:
	* UniEvent/UNIXpollManagerImp.h:
	* SimpleDispatcherImp.cxx:
	* UNIXpollManagerImp.cxx: Removed all references to <bool.h> and
	changed all references to bool_val and bool_cst to bool.
	
	* GNUmakefile.in: Removed because now there's Makefile.in

	* Makefile.in: Added the wondrous, splendiferous new makefile that
	reports a list of dependencies to the root level makefile so one,
	big make can be done at the top level.

1999-10-15  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* GNUmakefile.in: Updated to be have everything the GNUmakefile has.

1999-07-20  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNEVT_ClassIdent.h: Removed a redundant operator ==
	that was only there because some C++ compilers had a hard time
	properly resolving the operator == that took base class types.

	* UniEvent/UNIXpollManagerImp.h: Added a #define of __USE_XOPEN to
	ensure that Linux defines the full set of poll flags.

1999-01-31  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UNIXpollManagerImp.cxx (doPoll): Changed to handle possible
	EINTR return code, indicating that the poll was interrupted by a
	signal.  Some operating systems (AIX v.? and DGUX v.4.0D)
	interrupt poll with a signal, even if the signal handler has the
	SA_RESTART flag set.

1999-01-10  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/EventPtrT.h (i_CheckType): Added a NULL check.  Not
	sure if it is right though.

	* UniEvent/UNIXError.h: Added a destructor and AreYouA function
	that were accidentally missing before.

	* UNIXError.cxx: Added an identifier so this class is part of my
	RTTI system.

	* UNEVT_ClassIdent.cxx: Added the UNIXError class to the list.

1998-08-29  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/UNIXError.h: 
	* UNIXError.cxx: Added UNIXError class for encapsulating errno
	values nicely.

Mon May 19 10:51:25 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/OSConditionManager.h
	(OSConditionManager::WaitConditions): Realized that WaitConditions
 	needed to know which dispatcher to post events to.

	* UniEvent/StandCondManager.h:
	* UniEvent/StandObConditions.h:
	* StandCondManager.cxx:
	* StandObConditions.cxx: Added new classes to implement some
 	standard ConditionManger and ObjectConditions functionality.


Sun May 18 18:28:35 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/OSObjectConditions.h: 
	* UniEvent/Dispatcher.h: 
	* UniEvent/OSConditionManager.h: Firmed up interface for
 	OSConditionManager, and OSObjectConditions classes, and related
 	member functions in other classes.

	* OSObjectConditions.cxx: Added to make place for inline member
 	functions and identifier constant to be.

	* UNEVT_ClassIdent.cxx: Added new comment for OSObjectConditions
	class.

Mon May 12 19:58:59 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/EventPtr.h:
	* UniEvent/EventPtrT.h:
	* EventPtr.cxx: Added new EventPtr classes to maintain reference
 	count on UNIEvent classes.

	* UniEvent/Event.h:
	* UniEvent/Dispatcher.h:
	* UniEvent/SimpleDispatcher.h:
	* SimpleDispatcherImp.cxx:
	* UNEVT_ClassIdent.cxx: Various changes to make UNIEvent a
 	reference counted class, and to add (and use) new Ptr types to
 	automatically maintain the reference count.

Wed Apr 16 13:07:08 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/OSConditionManager.h:
	* OSConditionManager.cxx: Added new class for managing OS
	conditions that can trigger events.

Sun Apr  6 10:28:31 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* GNUmakefile.in: Added new library CCs, a framework for tests,
	and a clean target.

	* UniEvent/Dispatcher.h (class UNIDispatcher): Added explanatory
 	comment so I wouldn't try to smooth a needed rough edge out of the
 	design again.

	* UniEvent/SimpleDispatcher.h (class UNISimpleDispatcher): Removed
 	OSConditionManager accessor because there's no sense in having the
 	exact same implementation in several places in the inheritance
 	hierarchy.

Tue Mar 11 15:29:55 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/SimpleDispatcher.h: 
	* UniEvent/Dispatcher.h: 
	* SimpleDispatcherImp.cxx: Added new 'enclosing' parameter to
	dispatching funtions in order to allow for dispatchers implemented
	in terms of other dispatchers.

Sun Mar  9 08:13:56 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Event.h (constructor): Added default constructor after
 	realizing copy constructor suppressed automatically generated
 	default.

Sat Mar  8 09:29:44 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/SimpleDispatcher.h:
	* SimpleDispatcherImp.cxx:
	* SimpleDispatcher.cxx: Added UNISimpleDispatcher class, which is
	a simple STL based event dispatcher.

	* UniEvent/Event.h: Removed useless include of <bool.h>.  Added
	alternate method of calling TriggerEvent to class UNIEvent.

	* UniEvent/Dispatcher.h (constructor): Added default constructor
 	after realizing copy constructor suppressed automatically
 	generated default.
	(class UNIDispatcher): Changed bool_ret, to use bool_val typedef
	instead.

Mon Mar  3 00:25:14 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Event.h: Fixed stupid errors.

	* UniEvent/Dispatcher.h: Fixed stupid errors.

Sun Mar  2 23:17:54 1997  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* UniEvent/Event.h: First cut at definition for abstract UNIEvent
 	class.

	* UniEvent/Dispatcher.h: First cut at definition for abstract
	UNIDispatcher class.

