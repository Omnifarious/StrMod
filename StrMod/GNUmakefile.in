# @configure_input@

prefix		=	@prefix@
exec_prefix	=	@exec_prefix@
srcdir		=	@srcdir@
top_srcdir	=	@top_srcdir@
libdir		=	$(prefix)/lib

CC = @CC@
CFLAGS = @CFLAGS@

CXX = @CXX@
CXXFLAGS = @CXXFLAGS@

CPPFLAGS = @CPPFLAGS@
DEFS =  @DEFS@

LDFLAGS = @LDFLAGS@
LIBS =  @LIBS@

DEPDB = @DEPDB@

%.o : %.cxx
	$(CXX) -c $(@:.o=.cxx) $(CPPFLAGS) $(CXXFLAGS) -o $@

%.s.o : %.cxx
	$(CXX) -c $(@:.s.o=.cxx) $(CPPFLAGS) $(CXXFLAGS) -fPIC -o $@

%.cxx.d : %.cxx
	+$(CXX) -c $< $(CPPFLAGS) $(CXXFLAGS) -M | sed "s;$<;;" | sed 's;^$(notdir $*)\.o;$*.cxx;' | $(DEPDB) update --addtouch $< $<

%.c.d : %.c
	+$(CC) -c $< $(CPPFLAGS) $(CFLAGS) -M | sed "s;$<;;" | sed 's;^$(notdir $*)\.o;$*.c;' | $(DEPDB) update --addtouch $< $<

MYMAKE := $(MAKE)

LIBCCS = EchoModule.cxx  STR_ClassIdent.cxx  StreamModule.cxx  \
         StrChunk.cxx  StrChunkPtr.cxx  LinearExtent.cxx  GroupVector.cxx \
         GV_Iterator.cxx  StrSubChunk.cxx  GroupChunk.cxx \
         LinearExtentStrmOp.cxx  StrChunkPtrT.cxx  OutSerializer.cxx \
         InSerializer.cxx  StreamFDModule.cxx  StreamSplitter.cxx \
         SocketModule.cxx  SockListenModule.cxx  EOFStrChunk.cxx  FDUtil.cxx \
         SimpleMulti.cxx  StreamProcessor.cxx  ProcessorModule.cxx \
         CharChopper.cxx  PassThrough.cxx  NewlineChopper.cxx  BufferChunk.cxx \
         PreAllocBuffer.cxx  DynamicBuffer.cxx  BufferChunkFactory.cxx \
         InfiniteModule.cxx

TESTCCS = tests/testchunk.cxx  tests/server.cxx  tests/testdist.cxx  \
          tests/testecho.cxx   tests/testsock.cxx tests/echoserv.cxx  \
          tests/testextent.cxx tests/testGV.cxx  tests/testmulti.cxx \
	  tests/testserial.cxx tests/TelnetToAscii.cxx tests/ttelnet.cxx \
          tests/testPreAlloc.cxx tests/testinfinite.cxx

CCNAMES = $(LIBCCS) $(TESTCCS)

CNAMES = utils/cechoserv.c  utils/audiodiv.c  utils/writelots.c

DEPSUB = $(patsubst %.c,%.o,$(?:.cxx=.o))
DEPSUBDD = $(patsubst %.c,%.c.d,$(?:.cxx=.cxx.d))

$(libdir)/libStrMod.a : $(LIBCCS)
	$(MAKE) $(DEPSUB)
	ar rv $@ $(DEPSUB)
	rm -f $(DEPSUB)

$(EXTLIBTAG) : $(LIBCCS)
	$(MAKE) $(DEPSUB)
	touch $(EXTLIBTAG)
	ar rv $(EXTLIB) $(DEPSUB)
	rm -f $(DEPSUB)

tests/testserial : tests/testserial.o OutSerializer.o InSerializer.o BufferChunk.o DynamicBuffer.o StrChunkPtr.o GroupVector.o GV_Iterator.o StrChunk.o LinearExtent.o STR_ClassIdent.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/testserial

tests/server : tests/server.o
	$(CXX) tests/server.o $(LDFLAGS) $(LIBS) -o tests/server

tests/echoserv : tests/echoserv.o StreamModule.o StreamFDModule.o STR_ClassIdent.o StrChunkPtr.o StrChunk.o  GroupVector.o LinearExtent.o SocketModule.o EchoModule.o SockListenModule.o EOFStrChunk.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/echoserv 2>&1 | c++filt

tests/infinite : tests/testinfinite.o FDUtil.o StreamFDModule.o \
                 StreamSplitter.o BufferChunk.o StrChunkPtr.o InfiniteModule.o \
                 StreamModule.o PreAllocBuffer.o EOFStrChunk.o DynamicBuffer.o \
                 GroupVector.o StrChunk.o STR_ClassIdent.o LinearExtent.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/infinite 2>&1 | c++filt

tests/multitest : tests/testmulti.o EchoModule.o SimpleMulti.o StreamModule.o \
                  SockListenModule.o StrChunkPtr.o StrChunkPtrT.o \
                  STR_ClassIdent.o StrChunk.o SocketModule.o LinearExtent.o \
                  StreamFDModule.o FDUtil.o  EOFStrChunk.o DynamicBuffer.o \
                  GroupVector.o ProcessorModule.o StreamProcessor.o \
                  CharChopper.o NewlineChopper.o PassThrough.o GroupChunk.o \
                  GV_Iterator.o StrSubChunk.o BufferChunk.o PreAllocBuffer.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/multitest 2>&1 | c++filt

tests/testdist : tests/testdist.o
	$(CXX) tests/testdist.o $(LDFLAGS) -o tests/testdist

tests/testsock : tests/testsock.o StreamModule.o StreamFDModule.o STR_ClassIdent.o StrChunkPtr.o StrChunk.o  GroupVector.o LinearExtent.o SocketModule.o StreamSplitter.o EOFStrChunk.o FDUtil.o DynamicBuffer.o BufferChunk.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/testsock 2>&1 | c++filt

tests/testPreAlloc : tests/testPreAlloc.o PreAllocBuffer.o StrChunk.o BufferChunk.o LinearExtent.o STR_ClassIdent.o GroupVector.o DynamicBuffer.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o $@ 2>&1 | c++filt

tests/ttelnet : tests/ttelnet.o tests/TelnetToAscii.o StreamModule.o \
                StreamFDModule.o STR_ClassIdent.o StrChunkPtr.o StrChunk.o \
                GroupVector.o LinearExtent.o SocketModule.o \
                StreamSplitter.o EOFStrChunk.o FDUtil.o TelnetParser.o \
                StreamProcessor.o PassThrough.o ProcessorModule.o \
                GroupChunk.o GV_Iterator.o StrSubChunk.o DynamicBuffer.o \
                BufferChunk.o PreAllocBuffer.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/ttelnet 2>&1 | c++filt

tests/testchunk : tests/testchunk.o StrChunk.o GroupVector.o DynamicBuffer.o \
                  LinearExtent.o  STR_ClassIdent.o BufferChunk.o
	$(CXX) $^ -o $@ $(LDFLAGS) -lLCore 2>&1 | c++filt

tests/testecho : tests/testecho.o
	$(CXX) tests/testecho.o $(LDFLAGS) $(LIBS) -o tests/testecho 2>&1 | c++filt

tests/teststrfd : tests/teststrfd.o EchoModule.o StreamModule.o StreamFDModule.o STR_ClassIdent.o StrChunkPtr.o StrChunk.o GroupVector.o LinearExtent.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/teststrfd 2>&1 | c++filt

tests/testsplit : tests/testsplit.o EchoModule.o StreamModule.o StreamFDModule.o StreamSplitter.o STR_ClassIdent.o StrChunkPtr.o StrChunk.o GroupVector.o LinearExtent.o EOFStrChunk.o
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o tests/testsplit 2>&1 | c++filt

tests/testextent : tests/testextent.o LinearExtent.o
	$(CXX) $^ -o $@ 2>&1 | c++filt

tests/testGV : tests/testGV.o GroupVector.o GV_Iterator.o StrChunk.o \
               GroupChunk.o StrChunkPtr.o LinearExtent.o \
               StrSubChunk.o LinearExtentStrmOp.o
	$(CXX) $^ -o $@ $(LDFLAGS) -lNet 2>&1 | c++filt

GNUmakefile : depend.stamp
	$(DEPDB) list --makefiles GNUmakefile GNUmakefile.new
	mv GNUmakefile GNUmakefile~
	mv GNUmakefile.new GNUmakefile

depend.stamp : $(CCNAMES)
	rm -f GNUmakefile.old
	ln GNUmakefile GNUmakefile.old
	$(MYMAKE) -f GNUmakefile.old $(DEPSUBDD)
	rm -f GNUmakefile.old
	touch depend.stamp

##Do not delete this line, or the line after...
##Heh, heh, heh.

