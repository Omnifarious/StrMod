Sat Aug 24 07:37:48 1996  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* StrMod/StrChunkPtr.h (class StrChunkPtr): Added new operator !
	method as a counterpart to the operator bool conversion.

	* tests/testmulti.cc: Added new test program for SimpleMultiplexer
	class.

	* StrMod/SimpleMulti.h:
	* SimpleMulti.cc: Added new SimpleMultiplexer class, and related
 	plug classes.  This implements a simple multiplexer that
 	duplicates all input on the 'single' side to all the plugs
 	attached to the 'multi' side, and combines all the data from the
 	'multi' side into one flow on the 'single' side.

	* StrMod/SimplePlug.h: 
	* SimplePlug.cc: Added new SimplePlug class, and SimplePlug
 	template.  These are abstract classes that handle details of read
 	and write locking on a plug.  Classes derived from these have much
 	simpler implementations.

	* STR_ClassIdent.cc: Added new class numbers for SimplePlug and
	SimpleMulti related classes.

Sun Jul  7 00:09:41 1996  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* StrMod/StrChunkPtr.h (class StrChunkPtr): Fixed default
	implementation of i_CheckType to actually be correct.

	* StrMod/StreamFDModule.h (class StreamFDModule): Arranged for
	max_block_size to be initialized correctly.

	* StreamFDModule.cc: Fixed a problem with the initialization of
 	max_block_size.  Used to rely on StrChunkio crud for a solution.

	* StrFDPlug.cc: Added, then commented out some debugging.
	Rearranged statements to make logic clearer.

	* StreamModule.cc: Added, then commented out some debugging.  I
	left it there because it might be useful someday.

Fri Jul  5 13:19:20 1996  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* StrChunkio.cc: Dropped.  Functionality split between StrChunk.cc
 	and StrFDPlug.cc.  Some functionality no longer necessary because
 	of new StrChunkPtr system.

	* EchoModule.cc: Killed OS2 garbage.
	(DeletePlug): Removed reference to obsolete PutIntoFd funtion.
	(InternalRead): Changed to use new StrChunkPtr system.
	(ReadableNotify):
	(WriteableNotify): Removed because default implementation is
	correct.
	(Write): Changed to use new StrChunkPtr interface.

	* StrMod/EchoModule.h (class EchoModule): Changed to use new
	StrChunkPtr system.
	(class EchoPlug): Change to use new StrChunkPtr system, and new
	parent module system.

	* StrMod/StreamModule.h (StrPlug): Added assert to check for bad
	parent pointers.

	* StrChunkPtr.cc (StrChunkPtr::i_SetPtr): Removed unused addref
	parameter,

	* StrMod/StrChunkPtr.h (class StrChunkPtr): Changed i_SetPtr to be
 	non-virtual.  Removed unused addref parameter.  Added i_CheckType
	so implementing StrChunkPtrT would be easier and result in more
	efficient code.
	(StrChunkPtr::operator =): Added call to i_CheckType to make
	StrCunkPtr's typesafe.  Changed call to internal i_GetPtr to
	external GetPtr.  Added missing returns.

	* SockListenModule.cc (SockListenModule): Formatting changes so it
	looks prettier.
	(my_InternalRead): Adapted from old InternalRead.  Changed to use
	new StrChunkPtr stuff.
	(inputReady): Changed the way the address buffer was handled in an
	attempt to reduce executable size, and make re-entrant.
	(inputReady): Changed to used ANSI C string concatenation instead
	of multiple cerr << statements to reduce code size.
	(ListeningPlug): Changed to use new parent module handling.
	(ListeningPlug::Write): Changed to use new StrChunkPtr style
	interface.
	(SocketModule::junk): Removed, no longer needed for StrChunkPtr
	style StrChunk handling.

	* StrMod/SockListenModule.h (class SocketModuleChunk): Moved
	declaration so I could have StrChunkPtrT<SocketModuleChunk>. Also
	changed interface for new StrChunk stuff.
	Added typedef SocketModuleChunkPtr StrChunkPtrT<SocketModuleChunk>
	(class ListeningPlug): Changed interface to use new StrChunkPtr
	stuff.  And new parent module handling from StrPlug.

Sat Jun 29 01:26:16 1996  Eric M. Hopper  <hopper@omnifarious.mn.org>

	* StrMod/StreamModule.h (class StrPlug): Moved data members to
	private section.  Made copy constructor and assignment private to
	prevent accidental use.

	* StreamSplitter.cc (InternalRead): Changed to use StrChunkPtr
	instead of StrChunk *
	(Write): Changed to use StrChunkPtr instead of StrChunk *

	* StrMod/StreamSplitter.h (class SplitterPlug): Changed to use
	StrChunkPtr instead of StrChunk *

	* StrFDPlug.cc (InternalRead): Changed to used StrChunkPtr instead
 	of StrChunk *
	(inputReady):
	(outputReady): Changed to use new StrChunk style.
	(ReadableNotify):
	(WriteableNotify): Changed to be close to safer 'standard'
 	implementation.
	(Write): Changed to use StrChunkPtr instead of StrChunk *

	* StreamFDModule.cc: Changed include for StrChunk.h to
	DBStrChunk.h now that DataBlockStrChunk has been split out.
	(StreamFDModule): Changed constructor to initialize new members,
	and to use an initialization list.

	* StrMod/StreamModule.h (class StrPlug): Changed interfaces to use
 	const StrChunkPtr & instead of StrChunk *, and also changed things
 	so StrPlug now has a parent_ member, and a good default
 	implementation of ReadableNotify, and WriteableNotify.

	Removed old obsolete chunk identification stuff.
	* StrMod/ChunkType.h: 
	* ChunType.cc: 

	StrChunk_done tag

	* GNUmakefile.in (LIBCCS): Arranged to be more rational.
	(CCNAMES): Arranged to be more rational.
	(CNAMES): Arranged to be more rational.
	(tests/testchunk): Updated target to avoid linking library.
	(tests/testextent): New target.  Test class LinearExtent.
	(tests/testGV): New target.  Test lots, especially GroupVector.

	* tests/testextent.cc: Attempt to extensively test LinearExtent
	class, both in terms of performance and functionality.

	* tests/testGV.cc: New test to work the GroupVector, and some of
	the other components of the new StrChunk style.

	* tests/testchunk.cc: Changed to use new StrChunk style.

	New class StrSubChunk used to make a part of an existing chunk
	look like a full chunk to the outside world.
	* StrMod/StrSubChunk.h:
	* StrSubChunk.cc:

	New class StrChunkPtr that acts as a reference counted pointer to
	StrChunk
	* StrMod/StrChunkPtr.h:
	* StrChunkPtr.cc: 

	* LinearExtentStrmOp.cc: New file for implementation of stream
	operator for class LinearExtent.

	New class GroupChunk to hold a group of chunks and make them
	appear to be one chunk.
	* StrMod/GroupChunk.h:
	* GroupChunk.cc:

	* STR_ClassIdent.cc: Changed comment style to be more rational and
	added comments for new classes.

	* LinearExtent.cc (SubExtent): Added const qualifier.
	(SubExtent_eq): New function, in place SubExtent calc.

	Added totallength_ field to class GroupVector.
	* StrMod/GroupVector.h: Update totallength_ field when needed.
	* GroupVector.cc: Added initialization for totallength_

	Moved from StrChunk.h and StrChunk.cc along with re-working for
	new StrChunk handling.
	* StrMod/DBStrChunk.h:
	* DBStrChunk.cc: 

 	Completely re-worked for new StrChunk handling.
	* StrMod/StrChunk.h:
	* StrChunk.cc:
